<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAFZSURBVFhHxZYJDsQgCEV7dG/eDlKsG/Bd2mliZhKX/wAF
        jsP6zvM052USWYesacSeTTYIcjiyRgGgrQSgQyCHq2vi8cr4ieYzEcJaPzNnxLh7XNcTSx7oE5i2NBCb
        ASBHFhAbASBxuRcJYhPAkHgBsQFgSrzyhDzV/i8AOQVBYQgheBmTn2/3y2Wrd29kiJScSDwCOPnEyDXd
        /Od6QyxP4nbRMDzg+6WBKcRpvx/fYQA51hd/EaCBaCzHy/GUB8S17YWrw/ZSCPLYxpuuPrevANSL/gXA
        YusGJiKjMVlqRKxGBrRspSfMawPU4z6LntiOAiTREKhW8LjLd7e/tCsZN6TeSFkhF9X+110VlarpUR2W
        LLZA3gKAxKuQRM9NW0+ey6z5O0A0Br0DnFn5pq97QHLIMADf3XWA8oW7z7CuK94TQ+a1JJPBcEEDesj7
        LL/IiP/URCWCmugFS9i2aM5ITc0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAQAAEABADoAgAAFgAAACgAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAEAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAADgAAAAAOAAAAd3AAAAAAAAAAAAAAAAAAAAAHdwAAmZmZmZmZmZAAAAAzMABw4JmZmZmZ
        mZmQ7gMzMzMzBwCZmZmZmZmZkAADMzMzMwcAmZmZmZmZmZAAMzMzMzMwAJmZmZmZmZmQADMzMzMzMACZ
        mZmZmZmZkAADMzMzMwAAAAAAAAAAAAAAAzMzMzMAAAAADgAAAAAOAAAAMzAAAAAAAA4AAAAADgAAAAAA
        AADu7u7u4O7u7u7u7u7g7u7uAAAADgAAAAAOAAAAAOAAAAAAAA4AcAAADgAAAADgAAAAAAAOAHcAAA4A
        AAAA4AAAAAAADgsHcAAOAAAAAOAAAAAAAAC7sHcADgAAAADgAAAAAAALu7sHcA4AAAAA4AAAAAAAu7u7
        sHcOAAAAAOAAAAAAC7u7u7sHfgAAAADgAADu4Lu7u7u7sHfu7u7g7u7uAAu7u7u7u7sHAAAAAOAAAAC7
        u7u7u7u7sAAAAADgAAAAC7u7u7u7uw4AAAAA4AAAAAC7u7u7u7AOAAAAAOAAAAAAC7u7u7sADgAAAADg
        AAAAAAC7u7uwAA4AAAAA4AAAAAAAC7u7AAAOAAAAAOAAAO7u7uC7sO7u7u7u7u7u7u4AAAAOCwAAAA4A
        AAAA4AAAAAAADgAAAAAOAAAAAOAAAAAAAA4AAAAADgAAAADgAAD+/78fgAA/A4AAOAEAAAAAgAAwAIAA
        IACAACAAgAAwAYAAMAH+v7gD/r+/HwAAAAD+v7+f/p+/n/6Pv5/+B7+f/gO/n/wBv5/4AL+f8AA/nwAA
        AADAAD+fgAAAH8AAP9/gAL/f8AG/3/gDv9/8B7/fAAAAAP4fv9/+v7/f/v+/3w==
</value>
  </data>
</root>